/*! coi-serviceworker v0.1.7 - Guido Zuidhof and contributors, licensed under MIT */let coepCredentialless=!1;typeof window>"u"?(self.addEventListener("install",()=>self.skipWaiting()),self.addEventListener("activate",e=>e.waitUntil(self.clients.claim())),self.addEventListener("message",e=>{if(e.data)e.data.type==="deregister"?self.registration.unregister().then(()=>self.clients.matchAll()).then(r=>{r.forEach(t=>t.navigate(t.url))}):e.data.type==="coepCredentialless"&&(coepCredentialless=e.data.value);else return}),self.addEventListener("fetch",function(e){const r=e.request;if(r.cache==="only-if-cached"&&r.mode!=="same-origin")return;const t=coepCredentialless&&r.mode==="no-cors"?new Request(r,{credentials:"omit"}):r;e.respondWith(fetch(t).then(s=>{if(s.status===0)return s;const o=new Headers(s.headers);return o.set("Cross-Origin-Embedder-Policy",coepCredentialless?"credentialless":"require-corp"),coepCredentialless||o.set("Cross-Origin-Resource-Policy","cross-origin"),o.set("Cross-Origin-Opener-Policy","same-origin"),new Response(s.body,{status:s.status,statusText:s.statusText,headers:o})}).catch(s=>console.error(s)))})):(()=>{const e={shouldRegister:()=>!0,shouldDeregister:()=>!1,coepCredentialless:()=>!(window.chrome||window.netscape),doReload:()=>window.location.reload(),quiet:!1,...window.coi},r=navigator;if(r.serviceWorker&&r.serviceWorker.controller&&(r.serviceWorker.controller.postMessage({type:"coepCredentialless",value:e.coepCredentialless()}),e.shouldDeregister()&&r.serviceWorker.controller.postMessage({type:"deregister"})),!(window.crossOriginIsolated!==!1||!e.shouldRegister())){if(!window.isSecureContext){!e.quiet&&console.log("COOP/COEP Service Worker not registered, a secure context is required.");return}r.serviceWorker&&r.serviceWorker.register(window.document.currentScript.src).then(t=>{!e.quiet&&console.log("COOP/COEP Service Worker registered",t.scope),t.addEventListener("updatefound",()=>{!e.quiet&&console.log("Reloading page to make use of updated COOP/COEP Service Worker."),e.doReload()}),t.active&&!r.serviceWorker.controller&&(!e.quiet&&console.log("Reloading page to make use of COOP/COEP Service Worker."),e.doReload())},t=>{!e.quiet&&console.error("COOP/COEP Service Worker failed to register:",t)})}})();
